security:
    encoders:
        PhpInk\Nami\CoreBundle\Model\Odm\User: sha512
        PhpInk\Nami\CoreBundle\Model\Orm\User: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_API:         ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        main:
            id: nami_core.user_provider

    firewalls:
        main:
            anonymous: ~
            form_login:
                login_path: nami_front_login
                check_path: nami_front_login

        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        index:
            pattern:  ^/api/$
            security: false

        page_getter:
            pattern:  ^/api/pages/url
            security: false

        reset_confirm:
            pattern:  ^/api/users/(reset|confirm|register)$
            security: false

        token:
            pattern:  ^/api/users/token$
            stateless: true
            gfreeau_get_jwt:
                # this is the default config
                username_parameter: username
                password_parameter: password
                post_only: true
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            # advanced configuration
            lexik_jwt:
                authorization_header: # check token in Authorization Header
                    enabled: true
                    prefix:  Bearer
                cookie:               # check token in a cookie  - 2.7.*
                    enabled: false
                    name:    BEARER
                query_parameter:      # check token in query string parameter
                    enabled: true
                    name:    bearer
                throw_exceptions: false     # When an authentication failure occurs, return a 401 response immediately
                create_entry_point: true    # When no authentication details are provided, create a default entry point that returns a 401 response

    access_control:
        - { path: ^/api-doc/, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN] }
        - { path: ^/api/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN, ROLE_SONATA_ADMIN] }
