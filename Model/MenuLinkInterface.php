<?php

namespace PhpInk\Nami\CoreBundle\Model;

/**
 * Menu interface
 */
interface MenuLinkInterface
{
    /**
     * Category constructor
     */
    public function __construct();

    /**
     * Fill null collection properties
     */
    public function initialize();

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId();

    /**
     * Set the value of id.
     *
     * @param integer
     * @return $this
     */
    public function setId($id);

    /**
     * Unused:
     * Generated by Gedmo MaterializedPath
     * @return $this
     */
    public function updateLevel();

    /**
     * Get the value of level.
     * TreeLevel generated by Gedmo MaterializedPath
     *
     * @return integer
     */
    public function getLevel();

    /**
     * Get the value of path.
     * TreePath generated by Gedmo MaterializedPath
     *
     * @return boolean
     */
    public function getPath();

    /**
     * Set the value of active.
     *
     * @param boolean $active
     * @return MenuLinkInterface
     */
    public function setActive($active);

    /**
     * Get the value of active.
     *
     * @return boolean
     */
    public function isActive();

    /**
     * Get the id of the parent category.
     *
     * @return string
     */
    public function getParentId();

    /**
     * Set parent MenuLink (one to one).
     *
     * @param MenuLinkInterface $parent
     * @return MenuLinkInterface
     */
    public function setParent(MenuLinkInterface $parent = null);

    /**
     * Get parent MenuLink (one to one).
     *
     * @return MenuLinkInterface
     */
    public function getParent();

    /**
     * Set name
     *
     * @param string $name
     * @return MenuLinkInterface
     */
    public function setName($name);

    /**
     * Get name
     *
     * @return string
     */
    public function getName();

    /**
     * Sets the menu title.
     *
     * @param string $title
     * @return MenuLinkInterface
     */
    public function setTitle($title);

    /**
     * Get the menu title.
     *
     * @return string
     */
    public function getTitle();

    /**
     * Set filename
     *
     * @param string $link
     * @return MenuLinkInterface
     */
    public function setLink($link);

    /**
     * Get filename
     *
     * @return string
     */
    public function getLink();

    public function addItem(MenuLinkInterface $category);

    public function setItems($items);

    public function getItems();
}
